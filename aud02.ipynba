{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Iotef545Cc_WVHxdnVj8inshezNfwtIZ","timestamp":1755442726813},{"file_id":"1BHtxsdYXyr4Sz-Mnt7e7-5a_unlt6fT7","timestamp":1755441493559}],"authorship_tag":"ABX9TyMPxv0oDvKYgs27Tp60lF3g"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"4PNRK61XZrwk"},"outputs":[],"source":["import torch\n","import torchaudio\n","from transformers import Wav2Vec2ForCTC, Wav2Vec2Processor\n","from google.colab import files # Import the files module\n","\n","# Charger le modèle et le processeur\n","model_name = \"facebook/wav2vec2-base-960h\"\n","processor = Wav2Vec2Processor.from_pretrained(model_name)\n","model = Wav2Vec2ForCTC.from_pretrained(model_name)\n","\n","# Charger l'audio (supposé être en mono et 16kHz)\n","# Use the following lines to upload a file from your local machine in Google Colab\n","uploaded = files.upload()\n","audio_file_path = list(uploaded.keys())[0]\n","\n","# Replace \"path/to/your_audio.wav\" with the actual path to your audio file in Colab if it's not uploaded\n","# audio_file_path = \"chemin/vers/ton_audio.wav\" # <--- CHANGE THIS LINE IF NOT UPLOADING\n","\n","waveform, sample_rate = torchaudio.load(audio_file_path)\n","\n","# Si l'audio n'est pas en 16kHz, le convertir\n","if sample_rate != 16000:\n","    resampler = torchaudio.transforms.Resample(orig_freq=sample_rate, new_freq=16000)\n","    waveform = resampler(waveform)\n","\n","# Préparer les données pour le modèle\n","inputs = processor(waveform.squeeze(), sampling_rate=16000, return_tensors=\"pt\")\n","with torch.no_grad():\n","    logits = model(**inputs).logits\n","\n","# Décoder la transcription\n","predicted_ids = torch.argmax(logits, dim=-1)\n","transcription = processor.decode(predicted_ids[0])\n","\n","print(\"📝 Transcription :\", transcription)"]}]}